package main

import (
	"fmt"
	"strings"
)

func main() {
	//1
	fmt.Println(concat("hello", "my friend"))
	//2
	fmt.Println(Dlinastr("hello brather"))
	//3
	fmt.Println(proverkapd("hi ,freind!", "freind"))
	//4
	fmt.Println(podstr("Hello, World!", "World"))
	//5
	fmt.Println(zamenpod("Hello, World!", "World", "Golang"))
	//6
	fmt.Println(udalprob("  Hello, World!  "))
	//7
	fmt.Println(preodverh("Hello, World!"))
	fmt.Println(preodnij("Hello, World!"))
	//8
	fmt.Println(povtorstr("Hello! ", 3))
	//9
	fmt.Println(razbienstr("Hello,World,Go", ","))
	//10
	fmt.Println(sravstr("hello", "HELLO"))
	//11
	fmt.Println(poiskzam("Hello, World! World!", "World", "Golang"))
	//12
	fmt.Println(inversstr("Hello, World!"))
	//13
	fmt.Println(podsjet("Hello, World!"))
}

//  1. Конкатенация строк
//     Напишите функцию, которая принимает две строки и возвращает их конкатенацию.
func concat(a, b string) string {
	return a + b
}

//  2. Длина строки
//     Напишите функцию, которая принимает строку и возвращает её длину.
func Dlinastr(a string) int {
	return len(a)
}

//  3. Проверка подстроки
//     Напишите функцию, которая проверяет, содержит ли строка заданную подстроку.
func proverkapd(a, b string) bool {
	return strings.Contains(a, b)
}

//  4. Поиск подстроки
//     Напишите функцию, которая находит индекс первого вхождения подстроки в строке. 	Верните -1, если подстрока не найдена.
func podstr(a, b string) int {
	return strings.Index(a, b)
}

//  5. Замена подстроки
//     Напишите функцию, которая заменяет все вхождения подстроки в строке на другую 	подстроку.
func zamenpod(a, b, new string) string {
	return strings.ReplaceAll(a, b, new)
}

//  6. Удаление пробелов
//     Напишите функцию, которая удаляет пробелы в начале и в конце строки.
func udalprob(a string) string {
	return strings.TrimSpace(a)
}

//  7. Преобразование регистра
//     Напишите функцию, которая преобразует строку к верхнему и нижнему регистру.
func preodverh(a string) string {
	return strings.ToUpper(a)
}
func preodnij(a string) string {
	return strings.ToLower(a)
}

//  8. Повторение строки
//     Напишите функцию, которая повторяет строку заданное количество раз.
func povtorstr(a string, b int) string {
	return strings.Repeat(a, b)
}

//  9. Разбиение строки
//     Напишите функцию, которая разбивает строку по заданному разделителю и 	возвращает срез строк.
func razbienstr(a, b string) []string {
	return strings.Split(a, b)
}

//  10. Сравнение строк
//     Напишите функцию, которая сравнивает две строки без учета регистра.
func sravstr(a, b string) bool {
	return strings.EqualFold(a, b)
}

//  11. Поиск и замена первой подстроки
//     Напишите функцию, которая заменяет первое вхождение подстроки в строке на 	другую подстроку.
func poiskzam(a, b, new string) string {
	return strings.Replace(a, b, new, 1)
}

//  12. Инверсия строки
//     Напишите функцию, которая переворачивает строку.
func inversstr(a string) string {
	b := []rune(a)
	for i, j := 0, len(b)-1; i < j; i, j = i+1, j-1 {
		b[i], b[j] = b[j], b[i]
	}
	return string(b)
}

//  13. Подсчет символов
//     Напишите функцию, которая подсчитывает количество каждого символа в строке и 	возвращает карту с результатами.
func podsjet(a string) map[rune]int {
	counts := make(map[rune]int)
	for _, b := range a {
		counts[b]++
	}
	return counts
}

// 14.	Удаление символов
// 	Напишите функцию, которая удаляет все вхождения заданного символа из строки.
// 15.	 Подсчет слов
// 	Напишите функцию, которая подсчитывает количество слов в строке. Словом 	считается последовательность символов, разделенная пробелами.
// 16.	 Проверка префикса и суффикса
// 	Напишите функции, которые проверяют, начинается ли строка с заданного префикса и 	заканчивается ли строка заданным суффиксом.
// 17.	 Удаление дубликатов символов
// 	Напишите функцию, которая удаляет дубликаты символов в строке.
// 18.	 Форматирование строки
// 	Напишите функцию, которая форматирует строку, заменяя специальные символы 	HTML на их эквиваленты.
// 19.	 Псевдонимы строк
// 	Напишите функцию, которая создает псевдоним для строки, заменяя пробелы и 	специальные символы подчеркиваниями.
// 20.	 Разбор строки
// 	Напишите функцию, которая разбирает строку, содержащую числа, и возвращает их 	сумму.
// 21.	 Обратный порядок слов
// 	Напишите функцию, которая принимает строку и возвращает строку с обратным 	порядком слов.
// 22.	 Подсчет уникальных слов
// 	Напишите функцию, которая подсчитывает количество уникальных слов в строке.
// 23.	 Поиск палиндромов
// 	Напишите функцию, которая проверяет, является ли строка палиндромом.
// 24.	 Перемешивание слов
// 	Напишите функцию, которая случайным образом перемешивает слова в строке.
// 25.	 Сортировка слов по длине
// 	Напишите функцию, которая сортирует слова в строке по их длине.
// 26.	 Генерация хеш-значения
// 	Напишите функцию, которая вычисляет хеш-значение строки с использованием 	алгоритма SHA-256.
// 27.	 Генерация всех подстрок
// 	Напишите функцию, которая генерирует все подстроки заданной строки.
// 28.	 Поиск всех анаграмм
// 	Напишите функцию, которая ищет все анаграммы строки в другой строке.
// 29.	 Подсчет слов и символов
// 	Напишите функцию, которая подсчитывает количество слов и символов в строке.
