package main

import "fmt"

func main() {
	sav(100000, 50000)

	cred(3000000, 300000)

	tran(1, 1)

	contribution(1)

	inter(1)

	dep(1, 1)

	tranzak(1, 1)

	invest(1, 1)

	Refill(1, 1)

	Withdraw(1, 1)

	Bcheck(1)

	Interest(1, 1)

	Limitmax(1, 1)
}

// 1.	Учет накопительных счетов с ежемесячным пополнением
// •	Начальный баланс накопительного счета равен 100000 рублей.
// •	Реализуйте функции для пополнения счета каждый месяц на фиксированную сумму.
// •	Выводите баланс после каждого пополнения.
// •	Если баланс становится больше 500000 рублей, выведите сообщение "Достигнут лимит накоплений".
func sav(a, b int) {
	a = 100000
	println("Начальный баланс равен ", a)
	b = 50000
	println("ежемесечное пополнение равно ", b)
	for i := 1; ; i++ {
		c := a + b*i
		println("за ", i, " месяц обший баланс равен ", c)
		if c >= 500000 {
			println("Достигнут лимит накоплений")
			break
		}
	}

}

// 2.	Рассчет выплат по кредиту с фиксированной ставкой
// •	Начальная сумма кредита равна 3000000 рублей.
// •	Реализуйте функции для ежемесячного расчета выплат по кредиту с фиксированной процентной ставкой 10%.
// •	Выводите остаток по кредиту после каждой выплаты.
// •	Если остаток по кредиту становится меньше 500000 рублей, выведите сообщение "Почти погашен кредит".

func cred(a, b int) {
	a = 3000000
	println("ваш кредитный счет равен ", a)
	b = 300000
	println(" фиксированная ставка в 10 % ежемесечных платежей равно ", b)
	for i := 1; ; i++ {
		c := a - b*i
		println("остаток вашего кридитного счета равен ", c)
		if c < 500000 {
			println("кредит почти погашен ")
			break
		}
	}

}

// 3.	Учет операций по банковским переводам с лимитом суммы
// •	Начальный баланс счета равен 500000 рублей.
// •	Реализуйте функции для выполнения банковских переводов.
// •	Если сумма перевода превышает 100000 рублей, выведите сообщение "Сумма перевода превышает лимит".
// •	Выводите остаток на счете после каждого перевода.

func tran(a, b int) {
	a = 500000
	println("Начальный баланс счета равен ", a)
	fmt.Scan(&b)
	println("сумма перевода ", b)

	for {
		if b > 100000 {
			println("Сумма перевода превышает лимит")
			return
		}
		c := a - b
		println("остаток после успешного перевода равен ", c)
		break
	}
}

// 4.	Учет процентов по вкладам с ежемесячной капитализацией
// •	Начальный вклад равен 100000 рублей.
// •	Реализуйте функции для ежемесячного начисления процентов по ставке 5% годовых.
// •	Капитализируйте проценты ежемесячно и выводите сумму вклада после каждого начисления.
// •	Если сумма вклада превышает 150000 рублей, выведите сообщение "Достигнут лимит вклада".

func contribution(a int) {
	a = 100000
	println("Начальный вклад равен", a)
	for i := 1; ; i++ {
		b := a * 5 / 100
		println("ежемесячные начисления процентов по ставке 5% годовых равны ", b)
		c := a + b*i
		println("в", i, "месяце сумма вклада равна ", c)
		if c > 150000 {
			println("Достигнут лимит вклада")
			break
		}
	}
}

// 5.	Конвертация валют с ежемесячным обновлением курса
// •	Начальный курс доллара к рублю равен 74.5.
// •	Реализуйте функции для ежемесячного обновления курса валюты.
// •	Реализуйте функцию для конвертации заданной суммы в рубли по текущему курсу.
// •	Если курс становится ниже 70, выведите сообщение "Курс слишком низкий".

// 6.	Начисление сложных процентов на вклад
// •	Начальная сумма вклада равна 200000 рублей.
// •	Реализуйте функции для начисления сложных процентов каждый месяц по ставке 5%.
// •	Выводите баланс после каждого начисления.
// •	Если баланс становится больше 300000 рублей, выведите сообщение "Достигнут лимит начислений".

func inter(a int) {
	a = 200000
	println("Начальный вклад равен", a)
	for i := 1; ; i++ {
		b := a * 5 / 100
		println("ежемесячные начисления процентов по ставке 5% годовых равны ", b)
		c := a + b*i
		println("в", i, "месяце сумма начисления равна ", c)
		if c > 300000 {
			println("Достигнут лимит начислений")
			break
		}
	}
}

// 7.	Учет ежедневных расходов с лимитом
// •	Начальный лимит расходов в день равен 5000 рублей.
// •	Реализуйте функции для добавления расходов в течение дня.
// •	Выводите текущую сумму расходов после каждого добавления.
// •	Если сумма расходов превышает лимит, выведите сообщение "Превышен дневной лимит".

// 8.	Начисление процентов на депозит с ежегодной проверкой
// •	Начальная сумма депозита равна 500000 рублей.
// •	Реализуйте функции для начисления процентов каждый год по ставке 6%.
// •	Выводите баланс после каждого начисления.
// •	Если баланс становится больше 700000 рублей, выведите сообщение "Достигнут лимит начислений".

func dep(a, b int) {
	a = 500000
	println("Начальный баланс равен ", a)
	b = a * 5 / 100
	println("ежегодное начислений равно ", b)
	for i := 1; ; i++ {
		c := a + b*i
		println("за ", i, " год обший баланс равен ", c)
		if c >= 700000 {
			println("Достигнут лимит начислений")
			break
		}
	}
}

// 9.	Учет транзакций с комиссией
// •	Начальный баланс счета равен 100000 рублей.
// •	Реализуйте функции для добавления транзакций с комиссией 1%.
// •	Выводите баланс после каждой транзакции.
// •	Если баланс становится меньше 50000 рублей, выведите сообщение "Баланс ниже допустимого уровня".

func tranzak(a, b int) {
	a = 100000
	println("Начальный баланс счета равен ", a)
	fmt.Scan(&b)
	println("сумма транзакций ", b)

	for {
		if a < 50000 {
			println("Баланс ниже допустимого уровня")
			return
		}
		z := b + b*1/100
		c := a - z
		println("остаток после успешной транзакций равен ", c)
		break

	}
}

// 10.	Учет инвестиций с ежегодным пересчетом доходов
// •	Начальная сумма инвестиций равна 300000 рублей.
// •	Реализуйте функции для начисления дохода каждый год по ставке 7%.
// •	Выводите баланс после каждого начисления.
// •	Если баланс становится больше 400000 рублей, выведите сообщение "Достигнут лимит дохода".

func invest(a, b int) {
	a = 300000
	println("Начальная сумма инвестиций равна ", a)
	b = a * 7 / 100
	println("ежегодный доход по ставке 7% равен  ", b)
	for i := 1; ; i++ {
		c := a + b*i
		println("за ", i, " год обший даход равен ", c)
		if c >= 400000 {
			println("Достигнут лимит дохода")
			break
		}
	}
}

// 11.	Пополнение счета
// •	Начальный баланс счета равен 10000 рублей.
// •	Реализуйте функцию для пополнения счета на заданную сумму.
// •	Выводите новый баланс после каждого пополнения.

func Refill(a, b int) {
	a = 10000
	fmt.Scan(&b)
	for {
		println("баланс равен ", a+b)
		break
	}
}

// 12.	Снятие средств со счета
// •	Начальный баланс счета равен 20000 рублей.
// •	Реализуйте функцию для снятия средств со счета на заданную сумму.
// •	Если баланс становится меньше 0, выведите сообщение "Недостаточно средств".

func Withdraw(a, b int) {
	a = 20000
	println("Начальный баланс счета равен ", a)
	fmt.Scan(&b)
	println("сумма снятия средств со счета равена", b)

	for {
		c := a - b

		if c < 0 {
			println("Недостаточно средств")
			break
		}
		println("остаток после успешного снятия счета равен ", c)
		break

	}
}

// 13.	Проверка баланса
// •	Начальный баланс счета равен 15000 рублей.
// •	Реализуйте функцию для проверки баланса.
// •	Если баланс меньше 5000 рублей, выведите сообщение "Баланс низкий".

func Bcheck(a int) {
	a = 15000
	println("баланс счета равен ", a)
	for {
		if a < 5000 {
			println("Баланс низкий")
			break
		}
		break
	}
}

// 14.	Начисление процентов
// •	Начальный баланс счета равен 50000 рублей.
// •	Реализуйте функцию для начисления процентов на заданный баланс по ставке 2%.
// •	Выводите новый баланс после начисления процентов.

func Interest(a, b int) {
	a = 50000
	println("Начальный баланс счета равен ", a)
	fmt.Scan(&b)
	println("на ", b, "месецев начисляются проценты")
	for i := 1; i <= b; i++ {
		z := a + a*2/100
		c := a + z*i
		println("баланс равен ", c)
	}
}

// 15.	Перевод средств между счетами
// •	Начальный баланс первого счета равен 30000 рублей.
// •	Начальный баланс второго счета равен 15000 рублей.
// •	Реализуйте функцию для перевода средств с первого счета на второй на заданную сумму.
// •	Выводите балансы обоих счетов после перевода.

func Transfer(a, b int) {
	a = 30000
	b = 15000
	for {

	}
}

// 16.	Ограничение на максимальную сумму снятия
// •	Начальный баланс счета равен 40000 рублей.
// •	Реализуйте функцию для снятия средств с максимальной суммой снятия 10000 рублей.
// •	Если снимаемая сумма превышает этот лимит, выведите сообщение "Превышен лимит снятия".

func Limitmax(a, b int) {
	a = 40000
	println("Начальный баланс счета равен ", a)
	fmt.Scan(&b)
	println("сумма снятия средств ", b)

	for {
		if b > 1000 {
			println("Превышен лимит снятия")
			return
		}
		c := a - b
		println("остаток после успешной транзакций равен ", c)
		break

	}
}
